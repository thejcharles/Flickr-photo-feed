{"ast":null,"code":"var _jsxFileName = \"G:\\\\Coding\\\\flicker-node\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [backendData, setBackendData] = useState([{}]);\n  let data = \"\";\n  useEffect(() => {\n    fetch(\"/api\").then(response => response.json()).then(data => {\n      console.log(data);\n      data = data;\n      setBackendData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: {\n      data\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\n\n_s(App, \"lSbdPEQgG/af9fOvqlnzEvHwb4Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","App","backendData","setBackendData","data","fetch","then","response","json","console","log"],"sources":["G:/Coding/flicker-node/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nfunction App() {\n  const [backendData, setBackendData] = useState([{}]);\n\n  let data = \"\";\n\n  useEffect(() => {\n    fetch(\"/api\")\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        data = data;\n        setBackendData(data);\n      });\n  }, []);\n  return <div>{{ data }}</div>;\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AACA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA9C;EAEA,IAAII,IAAI,GAAG,EAAX;EAEAL,SAAS,CAAC,MAAM;IACdM,KAAK,CAAC,MAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQF,IAAI,IAAI;MACZK,OAAO,CAACC,GAAR,CAAYN,IAAZ;MACAA,IAAI,GAAGA,IAAP;MACAD,cAAc,CAACC,IAAD,CAAd;IACD,CANH;EAOD,CARQ,EAQN,EARM,CAAT;EASA,oBAAO;IAAA,UAAM;MAAEA;IAAF;EAAN;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;GAfQH,G;;KAAAA,G;AAiBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}